from taximeter import Taximeter 
from taximeter.utils import get_user_input

def show_welcome_message():
    print(
    """
    ğŸš– Bienvenido al TaxÃ­metro Digital ğŸš–
    -------------------------------------
    Este programa calcula la tarifa de un taxi basÃ¡ndose en el tiempo de trayecto. A continuaciÃ³n las condiciones:

    1. Cuando el taxi estÃ¡ parado, se cobra 2 cÃ©ntimos por segundo.
    2. Cuando el taxi estÃ¡ en movimiento, se cobra 5 cÃ©ntimos por segundo.
    3. Hasta indicar lo contrario, por defecto al comenzar el trayecto la tarifa aplicada serÃ¡ la de taxi parado.
    4. Al finalizar un trayecto, podrÃ¡ iniciar uno nuevo sin necesidad de cerrar el programa. 

    -------------------------------------
    """
    )

def main():
    """
    FunciÃ³n principal que gestiona la interacciÃ³n con el usuario y el trayecto del taxi.
    """
    taximeter = Taximeter()
    show_welcome_message()
    
    while True:
        user_action = get_user_input(
            "\nÂ¿Desea iniciar un trayecto? (s para sÃ­, n para cancelar): ",
            ['s', 'n']
        )

        if user_action == 's':
            taximeter.reset_trip()  
            print("\nğŸš€ Iniciando trayecto...")
            taximeter.start_trip()
            while True:
                # ActualizaciÃ³n del estado del taxi
                status = get_user_input(
                    "\nEn cada momento, indique si el taxi estÃ¡ en movimiento (m), parado (p) o si desea finalizar el trayecto (f): ",
                    ['m', 'p', 'f']
                )
                if status == 'm':
                    taximeter.update_status(moving=True)
                    print("\nğŸš— Taxi en movimiento.")
                elif status == 'p':
                    taximeter.update_status(moving=False)
                    print("\nâ›” Taxi parado.")
                elif status == 'f':
                    taximeter.end_trip()
                    break
        elif user_action == 'n':
            print("ğŸ‘‹ Â¡Gracias por usar el TaxÃ­metro Digital! Hasta la prÃ³xima.")
            break

if __name__ == "__main__":
    main()
